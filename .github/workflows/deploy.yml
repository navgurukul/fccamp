name: Deploy on Push or PR Merge

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    types:
      - closed # This triggers when a PR is merged or closed

jobs:
  build-api:
    name: Build Api (Container) Upload Artifect
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Source Files
        uses: actions/checkout@v4 # v4.1.1
        with:
          submodules: 'recursive'

      - name: Create .env file from secret
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
        
      - name: Create Image
        run: |
          docker compose -f docker-compose.api.yml build

            
      - name: Save Image
        run: docker save fcc-api > api-artifact.tar

      - name: Upload Api Artifact
        uses: actions/upload-artifact@v4 # v4.3.1
        with:
          name: api-artifact
          path: api-artifact.tar
          
  build-client:
    name: Build Client (Container) Upload Artifect
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Source Files
        uses: actions/checkout@v4 # v4.1.1
        with:
          submodules: 'recursive'

      - name: Create .env file from secret
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
        
      - name: Create Image
        run: |
          docker compose -f docker-compose.client.yml build

            
      - name: Save Image
        run: docker save fcc-client > client-artifact.tar

      - name: Upload Api Artifact
        uses: actions/upload-artifact@v4 # v4.3.1
        with:
          name: client-artifact
          path: client-artifact.tar
     
          
  deploy:
    runs-on: ubuntu-latest
    needs: [build-api,build-client]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: Download Api Artifact
      uses: actions/download-artifact@v4 # v4.1.4
      with:
        name: api-artifact
        
    - name: Download Client Artifact
      uses: actions/download-artifact@v4 # v4.1.4
      with:
        name: client-artifact
      
    - name: Run deployment script based on branch
      run: |
        #scp -o StrictHostKeyChecking=no api-artifact.tar ${{ secrets.SSH_USER }}@${{ secrets.DEV_SSH_HOST }}:/home/ubuntu/freeCodeCamp/
        #scp -o StrictHostKeyChecking=no client-artifact.tar ${{ secrets.SSH_USER }}@${{ secrets.DEV_SSH_HOST }}:/home/ubuntu/freeCodeCamp/

        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.DEV_SSH_HOST }} << 'EOF'
        pwd
        tree
        cd /home/ubuntu/freeCodeCamp/
        git pull
        sudo docker load < ./api-artifact.tar
        sudo docker load < ./client-artifact.tar
        echo "${{ secrets.ENV_FILE }}" > .env
        rm api-artifact.tar
        rm client-artifact.tar  
        EOF
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_USER: ${{ secrets.SSH_USER }}   # Secret for SSH username
        SSH_HOST: ${{ secrets.SSH_HOST }}   # Secret for SSH host
